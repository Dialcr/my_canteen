namespace Canteen.Services.Dto;

public class ResponseErrorDto
{
    //
    // Summary:
    //     A URI reference [RFC3986] that identifies the problem type. This specification
    //     encourages that, when dereferenced, it provide human-readable documentation for
    //     the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member
    //     is not present, its value is assumed to be "about:blank".
    public string? Type { get; set; }
    //
    // Summary:
    //     A short, human-readable summary of the problem type. It SHOULD NOT change from
    //     occurrence to occurrence of the problem, except for purposes of localization(e.g.,
    //     using proactive content negotiation; see[RFC7231], Section 3.4).
    //    [JsonPropertyName("title")]
    public string Title { get; set; }

    //
    // Summary:
    //     A human-readable explanation specific to this occurrence of the problem.
    //  [JsonPropertyName("detail")]
    public string Detail { get; set; }

    //
    // Summary:
    //     The HTTP status code([RFC7231], Section 6) generated by the origin server for
    //     this occurrence of the problem.
    //    [JsonPropertyName("status")]
    public int Status { get; set; }

    /// <summary>
    /// Used by the client when needs to show a message to the user.
    /// If the value is null then the message will not be shown to the user.
    /// </summary>
    public int? ClientCode { get; set; }

    //
    // Summary:
    //     A URI reference that identifies the specific occurrence of the problem. It may
    //     or may not yield further information if dereferenced.
    //[JsonPropertyName("instance")]
    public string? Instance { get; set; }
    //
    // Summary:
    //     Gets the System.Collections.Generic.IDictionary`2 for extension members.
    //     Problem type definitions MAY extend the problem details object with additional
    //     members. Extension members appear in the same namespace as other members of a
    //     problem type.
    public IDictionary<string, string>? Extensions { get; set; }
}