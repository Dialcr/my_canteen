    // <auto-generated />
    using System;
    using Canteen.DataAccess;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;
    using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

    #nullable disable

    namespace Canteen.DataAccess.Migrations
    {
        [DbContext(typeof(EntitiesContext))]
        partial class EntitiesContextModelSnapshot : ModelSnapshot
        {
            protected override void BuildModel(ModelBuilder modelBuilder)
            {
    #pragma warning disable 612, 618
                modelBuilder
                    .HasAnnotation("ProductVersion", "8.0.2")
                    .HasAnnotation("Relational:MaxIdentifierLength", 64);

                modelBuilder.Entity("Canteen.DataAccess.Entities.DietaryRestriction", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<string>("Description")
                            .IsRequired()
                            .HasMaxLength(100)
                            .HasColumnType("varchar(100)");

                        b.HasKey("Id");

                        b.ToTable("DietaryRestriction");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Discount", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<decimal>("DiscountDecimal")
                            .HasColumnType("decimal(65,30)");

                        b.Property<string>("DiscountType")
                            .IsRequired()
                            .HasMaxLength(50)
                            .HasColumnType("varchar(50)");

                        b.Property<int>("EstablishmentId")
                            .HasColumnType("int");

                        b.Property<decimal>("TotalNecesity")
                            .HasColumnType("decimal(65,30)");

                        b.HasKey("Id");

                        b.HasIndex("EstablishmentId");

                        b.ToTable("Discounts");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Establishment", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<string>("Description")
                            .IsRequired()
                            .HasMaxLength(255)
                            .HasColumnType("varchar(255)");

                        b.Property<string>("Image")
                            .IsRequired()
                            .HasMaxLength(255)
                            .HasColumnType("varchar(255)");

                        b.Property<string>("Name")
                            .IsRequired()
                            .HasMaxLength(50)
                            .HasColumnType("varchar(50)");

                        b.HasKey("Id");

                        b.ToTable("Establishments");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.KeyValueData", b =>
                    {
                        b.Property<string>("Key")
                            .HasMaxLength(100)
                            .HasColumnType("varchar(100)");

                        b.Property<string>("Data")
                            .IsRequired()
                            .HasColumnType("longtext");

                        b.HasKey("Key");

                        b.ToTable("KeyValueData");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Menu", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<DateTimeOffset>("Date")
                            .HasColumnType("datetime(6)");

                        b.Property<int>("EstablishmentId")
                            .HasColumnType("int");

                        b.HasKey("Id");

                        b.HasIndex("EstablishmentId");

                        b.ToTable("Menus");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.MenuProduct", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<int>("CanteenProductId")
                            .HasColumnType("int");

                        b.Property<int>("MenuId")
                            .HasColumnType("int");

                        b.Property<decimal>("Price")
                            .HasColumnType("decimal(65,30)");

                        b.Property<int>("Quantity")
                            .HasColumnType("int");

                        b.HasKey("Id");

                        b.HasIndex("CanteenProductId");

                        b.HasIndex("MenuId");

                        b.ToTable("MenuProducts");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Order", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<DateTimeOffset?>("CanceledAt")
                            .HasColumnType("datetime(6)");

                        b.Property<DateTimeOffset>("CreatedAt")
                            .HasColumnType("datetime(6)");

                        b.Property<decimal>("DeliveryTotalAmount")
                            .HasColumnType("decimal(65,30)");

                        b.Property<decimal>("DeliveryTotalDiscount")
                            .HasColumnType("decimal(65,30)");

                        b.Property<int>("EstablishmentId")
                            .HasColumnType("int");

                        b.Property<decimal>("PrductsTotalAmount")
                            .HasColumnType("decimal(65,30)");

                        b.Property<decimal>("ProductTotalDiscount")
                            .HasColumnType("decimal(65,30)");

                        b.Property<string>("Status")
                            .IsRequired()
                            .HasMaxLength(50)
                            .HasColumnType("varchar(50)");

                        b.Property<DateTimeOffset?>("UpdatedAt")
                            .HasColumnType("datetime(6)");

                        b.Property<int>("UserId")
                            .HasColumnType("int");

                        b.HasKey("Id");

                        b.HasIndex("EstablishmentId");

                        b.ToTable("Orders");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Product", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<string>("Category")
                            .IsRequired()
                            .HasMaxLength(50)
                            .HasColumnType("varchar(50)");

                        b.Property<string>("Description")
                            .IsRequired()
                            .HasMaxLength(255)
                            .HasColumnType("varchar(255)");

                        b.Property<int>("EstablishmentId")
                            .HasColumnType("int");

                        b.Property<string>("Ingredients")
                            .IsRequired()
                            .HasColumnType("longtext");

                        b.Property<string>("Name")
                            .IsRequired()
                            .HasMaxLength(100)
                            .HasColumnType("varchar(100)");

                        b.Property<decimal>("Price")
                            .HasColumnType("decimal(65,30)");

                        b.HasKey("Id");

                        b.HasIndex("EstablishmentId");

                        b.ToTable("Products");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.ProductImageUrl", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<int?>("ProductId")
                            .HasColumnType("int");

                        b.Property<string>("Url")
                            .IsRequired()
                            .HasMaxLength(500)
                            .HasColumnType("varchar(500)");

                        b.HasKey("Id");

                        b.HasIndex("ProductId");

                        b.ToTable("ProductImageUrls");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Request", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<DateTimeOffset>("CreatedAt")
                            .HasColumnType("datetime(6)");

                        b.Property<decimal>("DeliveryAmount")
                            .HasColumnType("decimal(65,30)");

                        b.Property<DateTimeOffset>("DeliveryDate")
                            .HasColumnType("datetime(6)");

                        b.Property<string>("DeliveryLocation")
                            .IsRequired()
                            .HasMaxLength(255)
                            .HasColumnType("varchar(255)");

                        b.Property<int?>("OrderId")
                            .IsRequired()
                            .HasColumnType("int");

                        b.Property<string>("Status")
                            .IsRequired()
                            .HasMaxLength(25)
                            .HasColumnType("varchar(25)");

                        b.Property<decimal>("TotalAmount")
                            .HasColumnType("decimal(65,30)");

                        b.Property<DateTimeOffset?>("UpdatedAt")
                            .HasColumnType("datetime(6)");

                        b.Property<int>("UserId")
                            .HasColumnType("int");

                        b.HasKey("Id");

                        b.HasIndex("OrderId");

                        b.ToTable("Requests");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.RequestProduct", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<int>("ProductId")
                            .HasColumnType("int");

                        b.Property<int>("Quantity")
                            .HasColumnType("int");

                        b.Property<int>("RequestId")
                            .HasColumnType("int");

                        b.HasKey("Id");

                        b.HasIndex("ProductId");

                        b.HasIndex("RequestId");

                        b.ToTable("RequestProducts");
                    });

                modelBuilder.Entity("DietaryRestrictionProduct", b =>
                    {
                        b.Property<int>("DietaryRestrictionsId")
                            .HasColumnType("int");

                        b.Property<int>("ProductsId")
                            .HasColumnType("int");

                        b.HasKey("DietaryRestrictionsId", "ProductsId");

                        b.HasIndex("ProductsId");

                        b.ToTable("DietaryRestrictionProduct");
                    });

                modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                    {
                        b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("int");

                        b.Property<string>("FriendlyName")
                            .HasColumnType("longtext");

                        b.Property<string>("Xml")
                            .HasColumnType("longtext");

                        b.HasKey("Id");

                        b.ToTable("DataProtectionKeys");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Discount", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Establishment", "Establishment")
                            .WithMany("Discounts")
                            .HasForeignKey("EstablishmentId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Establishment");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Menu", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Establishment", "Establishment")
                            .WithMany("Menus")
                            .HasForeignKey("EstablishmentId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Establishment");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.MenuProduct", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Product", "Product")
                            .WithMany()
                            .HasForeignKey("CanteenProductId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.HasOne("Canteen.DataAccess.Entities.Menu", "Menu")
                            .WithMany("MenuProducts")
                            .HasForeignKey("MenuId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Menu");

                        b.Navigation("Product");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Order", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Establishment", "Establishment")
                            .WithMany("Orders")
                            .HasForeignKey("EstablishmentId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Establishment");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Product", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Establishment", "Establishment")
                            .WithMany("Products")
                            .HasForeignKey("EstablishmentId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Establishment");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.ProductImageUrl", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Product", null)
                            .WithMany("ImagesUrl")
                            .HasForeignKey("ProductId");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Request", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Order", "Order")
                            .WithMany("Requests")
                            .HasForeignKey("OrderId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Order");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.RequestProduct", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.Product", "Product")
                            .WithMany()
                            .HasForeignKey("ProductId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.HasOne("Canteen.DataAccess.Entities.Request", "Request")
                            .WithMany("RequestProducts")
                            .HasForeignKey("RequestId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.Navigation("Product");

                        b.Navigation("Request");
                    });

                modelBuilder.Entity("DietaryRestrictionProduct", b =>
                    {
                        b.HasOne("Canteen.DataAccess.Entities.DietaryRestriction", null)
                            .WithMany()
                            .HasForeignKey("DietaryRestrictionsId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                        b.HasOne("Canteen.DataAccess.Entities.Product", null)
                            .WithMany()
                            .HasForeignKey("ProductsId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Establishment", b =>
                    {
                        b.Navigation("Discounts");

                        b.Navigation("Menus");

                        b.Navigation("Orders");

                        b.Navigation("Products");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Menu", b =>
                    {
                        b.Navigation("MenuProducts");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Order", b =>
                    {
                        b.Navigation("Requests");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Product", b =>
                    {
                        b.Navigation("ImagesUrl");
                    });

                modelBuilder.Entity("Canteen.DataAccess.Entities.Request", b =>
                    {
                        b.Navigation("RequestProducts");
                    });
    #pragma warning restore 612, 618
            }
        }
    }
